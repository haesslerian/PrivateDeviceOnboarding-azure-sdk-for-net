// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using System.Xml;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.DeviceOnboarding.Models;
using NUnit.Framework;

namespace Azure.ResourceManager.DeviceOnboarding.Samples
{
    public partial class Sample_DeviceStateResource
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Get_DeviceStatesGet()
        {
            // Generated from example definition: specification/deviceonboarding/resource-manager/Microsoft.DeviceOnboarding/preview/2024-12-01-preview/examples/DeviceStates_Get_MaximumSet_Gen.json
            // this example is just showing the usage of "DeviceStates_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceStateResource created on azure
            // for more information of creating DeviceStateResource, please refer to the document of DeviceStateResource
            string resourceUri = "uzmyxvvgermhswjpdeb";
            ResourceIdentifier deviceStateResourceId = DeviceStateResource.CreateResourceIdentifier(resourceUri);
            DeviceStateResource deviceState = client.GetDeviceStateResource(deviceStateResourceId);

            // invoke the operation
            DeviceStateResource result = await deviceState.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceStateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Delete_DeviceStatesDelete()
        {
            // Generated from example definition: specification/deviceonboarding/resource-manager/Microsoft.DeviceOnboarding/preview/2024-12-01-preview/examples/DeviceStates_Delete_MaximumSet_Gen.json
            // this example is just showing the usage of "DeviceStates_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceStateResource created on azure
            // for more information of creating DeviceStateResource, please refer to the document of DeviceStateResource
            string resourceUri = "uzmyxvvgermhswjpdeb";
            ResourceIdentifier deviceStateResourceId = DeviceStateResource.CreateResourceIdentifier(resourceUri);
            DeviceStateResource deviceState = client.GetDeviceStateResource(deviceStateResourceId);

            // invoke the operation
            await deviceState.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine("Succeeded");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Update_DeviceStatesUpdate()
        {
            // Generated from example definition: specification/deviceonboarding/resource-manager/Microsoft.DeviceOnboarding/preview/2024-12-01-preview/examples/DeviceStates_Update_MaximumSet_Gen.json
            // this example is just showing the usage of "DeviceStates_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceStateResource created on azure
            // for more information of creating DeviceStateResource, please refer to the document of DeviceStateResource
            string resourceUri = "uzmyxvvgermhswjpdeb";
            ResourceIdentifier deviceStateResourceId = DeviceStateResource.CreateResourceIdentifier(resourceUri);
            DeviceStateResource deviceState = client.GetDeviceStateResource(deviceStateResourceId);

            // invoke the operation
            DeviceStatePatch patch = new DeviceStatePatch
            {
                Properties = new DeviceStatePropertiesUpdate
                {
                    DiscoveryEnabled = DiscoveryOption.True,
                    OnboardingStatus = OnboardingStatus.Pending,
                    PolicyResourceId = new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup123/providers/Microsoft.DeviceOnboarding/onboardingServices/onboardingServiceName/policies/policyName$"),
                    AllocatedEndpoints = { new AllocatedEndpoint("txkxxgjsku", EndpointType.MicrosoftEventGridNamespace, "rzmawmbcdfaehwzylxshiitjlgepv") },
                },
            };
            DeviceStateResource result = await deviceState.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceStateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task CreateOrUpdate_DeviceStatesCreateOrUpdate()
        {
            // Generated from example definition: specification/deviceonboarding/resource-manager/Microsoft.DeviceOnboarding/preview/2024-12-01-preview/examples/DeviceStates_CreateOrUpdate_MaximumSet_Gen.json
            // this example is just showing the usage of "DeviceStates_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceStateResource created on azure
            // for more information of creating DeviceStateResource, please refer to the document of DeviceStateResource
            string resourceUri = "uzmyxvvgermhswjpdeb";
            ResourceIdentifier deviceStateResourceId = DeviceStateResource.CreateResourceIdentifier(resourceUri);
            DeviceStateResource deviceState = client.GetDeviceStateResource(deviceStateResourceId);

            // invoke the operation
            DeviceStateData data = new DeviceStateData
            {
                Properties = new DeviceStateProperties("registrationid", OnboardingStatus.Pending, new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup123/providers/Microsoft.DeviceOnboarding/onboardingServices/onboardingServiceName/policies/policyName$"))
                {
                    DiscoveryEnabled = DiscoveryOption.True,
                    AllocatedEndpoints = { new AllocatedEndpoint("txkxxgjsku", EndpointType.MicrosoftEventGridNamespace, "rzmawmbcdfaehwzylxshiitjlgepv") },
                },
            };
            ArmOperation<DeviceStateResource> lro = await deviceState.CreateOrUpdateAsync(WaitUntil.Completed, data);
            DeviceStateResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            DeviceStateData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task PrepareForOnboarding_DeviceStatesPrepareForOnboarding()
        {
            // Generated from example definition: specification/deviceonboarding/resource-manager/Microsoft.DeviceOnboarding/preview/2024-12-01-preview/examples/DeviceStates_PrepareForOnboarding_MaximumSet_Gen.json
            // this example is just showing the usage of "DeviceStates_PrepareForOnboarding" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this DeviceStateResource created on azure
            // for more information of creating DeviceStateResource, please refer to the document of DeviceStateResource
            string resourceUri = "uzmyxvvgermhswjpdeb";
            ResourceIdentifier deviceStateResourceId = DeviceStateResource.CreateResourceIdentifier(resourceUri);
            DeviceStateResource deviceState = client.GetDeviceStateResource(deviceStateResourceId);

            // invoke the operation
            PrepareForOnboardingProperties body = new PrepareForOnboardingProperties(XmlConvert.ToTimeSpan("PT56M"));
            await deviceState.PrepareForOnboardingAsync(WaitUntil.Completed, body);

            Console.WriteLine("Succeeded");
        }
    }
}

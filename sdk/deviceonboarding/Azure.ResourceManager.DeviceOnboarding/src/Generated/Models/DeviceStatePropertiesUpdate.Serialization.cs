// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    public partial class DeviceStatePropertiesUpdate : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DiscoveryEnabled))
            {
                writer.WritePropertyName("discoveryEnabled"u8);
                writer.WriteStringValue(DiscoveryEnabled.Value.ToString());
            }
            if (Optional.IsDefined(OnboardingStatus))
            {
                writer.WritePropertyName("onboardingStatus"u8);
                writer.WriteStringValue(OnboardingStatus.Value.ToString());
            }
            if (Optional.IsDefined(PolicyResourceId))
            {
                writer.WritePropertyName("policyResourceId"u8);
                writer.WriteStringValue(PolicyResourceId);
            }
            if (Optional.IsCollectionDefined(AllocatedEndpoints))
            {
                writer.WritePropertyName("allocatedEndpoints"u8);
                writer.WriteStartArray();
                foreach (var item in AllocatedEndpoints)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static DeviceStatePropertiesUpdate DeserializeDeviceStatePropertiesUpdate(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DiscoveryOption? discoveryEnabled = default;
            OnboardingStatus? onboardingStatus = default;
            ResourceIdentifier policyResourceId = default;
            IList<AllocatedEndpoint> allocatedEndpoints = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("discoveryEnabled"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    discoveryEnabled = new DiscoveryOption(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("onboardingStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    onboardingStatus = new OnboardingStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("policyResourceId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    policyResourceId = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("allocatedEndpoints"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<AllocatedEndpoint> array = new List<AllocatedEndpoint>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AllocatedEndpoint.DeserializeAllocatedEndpoint(item));
                    }
                    allocatedEndpoints = array;
                    continue;
                }
            }
            return new DeviceStatePropertiesUpdate(discoveryEnabled, onboardingStatus, policyResourceId, allocatedEndpoints ?? new ChangeTrackingList<AllocatedEndpoint>());
        }
    }
}

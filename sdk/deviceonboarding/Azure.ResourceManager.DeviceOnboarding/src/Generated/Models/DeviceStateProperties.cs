// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    /// <summary> Details of the DeviceState. </summary>
    public partial class DeviceStateProperties
    {
        /// <summary> Initializes a new instance of <see cref="DeviceStateProperties"/>. </summary>
        /// <param name="registrationId"> Unique identifier for the device. Allow alphanumeric and '-', '.', '_', ':' only. Last character can only be alphanumeric and '-'. </param>
        /// <param name="onboardingStatus"> Onboarding status of the resource this DeviceState extends. </param>
        /// <param name="policyResourceId"> The onboarding policy resource id. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="registrationId"/> or <paramref name="policyResourceId"/> is null. </exception>
        public DeviceStateProperties(string registrationId, OnboardingStatus onboardingStatus, ResourceIdentifier policyResourceId)
        {
            Argument.AssertNotNull(registrationId, nameof(registrationId));
            Argument.AssertNotNull(policyResourceId, nameof(policyResourceId));

            RegistrationId = registrationId;
            OnboardingStatus = onboardingStatus;
            PolicyResourceId = policyResourceId;
            AllocatedEndpoints = new ChangeTrackingList<AllocatedEndpoint>();
        }

        /// <summary> Initializes a new instance of <see cref="DeviceStateProperties"/>. </summary>
        /// <param name="registrationId"> Unique identifier for the device. Allow alphanumeric and '-', '.', '_', ':' only. Last character can only be alphanumeric and '-'. </param>
        /// <param name="discoveryEnabled"> Indicates if the device is enabled for discovery. </param>
        /// <param name="onboardingStatus"> Onboarding status of the resource this DeviceState extends. </param>
        /// <param name="policyResourceId"> The onboarding policy resource id. </param>
        /// <param name="allocatedEndpoints"> Array of previously allocated endpoints. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="onboardUntilOn"> Indicates the maximum date and time by which a device can be onboarded, in utcDateTime format. </param>
        internal DeviceStateProperties(string registrationId, DiscoveryOption? discoveryEnabled, OnboardingStatus onboardingStatus, ResourceIdentifier policyResourceId, IList<AllocatedEndpoint> allocatedEndpoints, ProvisioningState? provisioningState, DateTimeOffset? onboardUntilOn)
        {
            RegistrationId = registrationId;
            DiscoveryEnabled = discoveryEnabled;
            OnboardingStatus = onboardingStatus;
            PolicyResourceId = policyResourceId;
            AllocatedEndpoints = allocatedEndpoints;
            ProvisioningState = provisioningState;
            OnboardUntilOn = onboardUntilOn;
        }

        /// <summary> Unique identifier for the device. Allow alphanumeric and '-', '.', '_', ':' only. Last character can only be alphanumeric and '-'. </summary>
        public string RegistrationId { get; set; }
        /// <summary> Indicates if the device is enabled for discovery. </summary>
        public DiscoveryOption? DiscoveryEnabled { get; set; }
        /// <summary> Onboarding status of the resource this DeviceState extends. </summary>
        public OnboardingStatus OnboardingStatus { get; set; }
        /// <summary> The onboarding policy resource id. </summary>
        public ResourceIdentifier PolicyResourceId { get; set; }
        /// <summary> Array of previously allocated endpoints. </summary>
        public IList<AllocatedEndpoint> AllocatedEndpoints { get; }
        /// <summary> The status of the last operation. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Indicates the maximum date and time by which a device can be onboarded, in utcDateTime format. </summary>
        public DateTimeOffset? OnboardUntilOn { get; }
    }
}

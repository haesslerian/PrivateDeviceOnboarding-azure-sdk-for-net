// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    public partial class X5ChainPublicKeyDetailsUpdate : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(X5Chain))
            {
                writer.WritePropertyName("x5Chain"u8);
                writer.WriteStartArray();
                foreach (var item in X5Chain)
                {
                    writer.WriteBase64StringValue(item, "D");
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("publicKeyType"u8);
            writer.WriteStringValue(PublicKeyType.ToString());
            writer.WriteEndObject();
        }

        internal static X5ChainPublicKeyDetailsUpdate DeserializeX5ChainPublicKeyDetailsUpdate(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            IList<byte[]> x5Chain = default;
            PublicKeyType publicKeyType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("x5Chain"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<byte[]> array = new List<byte[]>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetBytesFromBase64("D"));
                    }
                    x5Chain = array;
                    continue;
                }
                if (property.NameEquals("publicKeyType"u8))
                {
                    publicKeyType = new PublicKeyType(property.Value.GetString());
                    continue;
                }
            }
            return new X5ChainPublicKeyDetailsUpdate(publicKeyType, x5Chain ?? new ChangeTrackingList<byte[]>());
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    public partial class DeviceRegistryNamespacePolicyResourceDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(JitProperties))
            {
                writer.WritePropertyName("jitProperties"u8);
                writer.WriteObjectValue(JitProperties);
            }
            if (Optional.IsDefined(OperationalIdentityInfo))
            {
                writer.WritePropertyName("operationalIdentityInfo"u8);
                writer.WriteObjectValue(OperationalIdentityInfo);
            }
            if (Optional.IsDefined(ResourceMetadata))
            {
                writer.WritePropertyName("resourceMetadata"u8);
                writer.WriteObjectValue(ResourceMetadata);
            }
            writer.WritePropertyName("type"u8);
            writer.WriteStringValue(OnboardingResourceType.ToString());
            writer.WriteEndObject();
        }

        internal static DeviceRegistryNamespacePolicyResourceDetails DeserializeDeviceRegistryNamespacePolicyResourceDetails(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            DeviceRegistryNamespaceDeviceJitProperties jitProperties = default;
            IdentityInfo operationalIdentityInfo = default;
            ResourceMetadata resourceMetadata = default;
            OnboardingResourceType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jitProperties"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    jitProperties = DeviceRegistryNamespaceDeviceJitProperties.DeserializeDeviceRegistryNamespaceDeviceJitProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("operationalIdentityInfo"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    operationalIdentityInfo = IdentityInfo.DeserializeIdentityInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("resourceMetadata"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceMetadata = ResourceMetadata.DeserializeResourceMetadata(property.Value);
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new OnboardingResourceType(property.Value.GetString());
                    continue;
                }
            }
            return new DeviceRegistryNamespacePolicyResourceDetails(type, jitProperties, operationalIdentityInfo, resourceMetadata);
        }
    }
}

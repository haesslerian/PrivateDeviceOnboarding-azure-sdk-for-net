// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    public partial class FdoBootstrapAuthenticationRule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(OwnershipVoucherStorage))
            {
                writer.WritePropertyName("ownershipVoucherStorage"u8);
                writer.WriteObjectValue(OwnershipVoucherStorage);
            }
            if (Optional.IsDefined(RendezvousEndpoint))
            {
                writer.WritePropertyName("rendezvousEndpoint"u8);
                writer.WriteStringValue(RendezvousEndpoint.AbsoluteUri);
            }
            writer.WritePropertyName("type"u8);
            writer.WriteStringValue(AuthenticationType.ToString());
            writer.WriteEndObject();
        }

        internal static FdoBootstrapAuthenticationRule DeserializeFdoBootstrapAuthenticationRule(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            FdoPublicKeys publicKeys = default;
            OwnershipVoucherStorage ownershipVoucherStorage = default;
            Uri rendezvousEndpoint = default;
            BootstrapAuthenticationType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("publicKeys"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    publicKeys = FdoPublicKeys.DeserializeFdoPublicKeys(property.Value);
                    continue;
                }
                if (property.NameEquals("ownershipVoucherStorage"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ownershipVoucherStorage = OwnershipVoucherStorage.DeserializeOwnershipVoucherStorage(property.Value);
                    continue;
                }
                if (property.NameEquals("rendezvousEndpoint"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    rendezvousEndpoint = new Uri(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("type"u8))
                {
                    type = new BootstrapAuthenticationType(property.Value.GetString());
                    continue;
                }
            }
            return new FdoBootstrapAuthenticationRule(type, publicKeys, ownershipVoucherStorage, rendezvousEndpoint);
        }
    }
}

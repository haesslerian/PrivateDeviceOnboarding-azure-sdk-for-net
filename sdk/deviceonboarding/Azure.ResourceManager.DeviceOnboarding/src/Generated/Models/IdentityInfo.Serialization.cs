// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    public partial class IdentityInfo : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(CertificateIssuance))
            {
                writer.WritePropertyName("certificateIssuance"u8);
                writer.WriteObjectValue(CertificateIssuance);
            }
            writer.WritePropertyName("deviceTemplateId"u8);
            writer.WriteStringValue(DeviceTemplateId);
            writer.WritePropertyName("staticGroupId"u8);
            writer.WriteStringValue(StaticGroupId);
            writer.WriteEndObject();
        }

        internal static IdentityInfo DeserializeIdentityInfo(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            CertificateIssuanceRule certificateIssuance = default;
            string deviceTemplateId = default;
            string staticGroupId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("certificateIssuance"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    certificateIssuance = CertificateIssuanceRule.DeserializeCertificateIssuanceRule(property.Value);
                    continue;
                }
                if (property.NameEquals("deviceTemplateId"u8))
                {
                    deviceTemplateId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("staticGroupId"u8))
                {
                    staticGroupId = property.Value.GetString();
                    continue;
                }
            }
            return new IdentityInfo(certificateIssuance, deviceTemplateId, staticGroupId);
        }
    }
}

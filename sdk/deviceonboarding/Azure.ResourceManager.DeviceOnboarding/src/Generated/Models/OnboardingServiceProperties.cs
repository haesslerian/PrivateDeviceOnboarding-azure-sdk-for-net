// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.ResourceManager.DeviceOnboarding.Models
{
    /// <summary> Details of the EdgeProvisioning OnboardingService. </summary>
    public partial class OnboardingServiceProperties
    {
        /// <summary> Initializes a new instance of <see cref="OnboardingServiceProperties"/>. </summary>
        /// <param name="enableCertificateManagement"> Selecting 'true' will enable a Microsoft managed PKI to issue certificates. Setting up of the CA and policies for certificate management will be while defining the onboarding policy. </param>
        public OnboardingServiceProperties(bool enableCertificateManagement)
        {
            EnableCertificateManagement = enableCertificateManagement;
            PrivateEndpointConnections = new ChangeTrackingList<DeviceOnboardingPrivateEndpointConnection>();
        }

        /// <summary> Initializes a new instance of <see cref="OnboardingServiceProperties"/>. </summary>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="deviceEndpoints"> The onboarding service device endpoints. </param>
        /// <param name="enableCertificateManagement"> Selecting 'true' will enable a Microsoft managed PKI to issue certificates. Setting up of the CA and policies for certificate management will be while defining the onboarding policy. </param>
        /// <param name="publicNetworkAccess"> Allow public network access to private links. </param>
        /// <param name="privateEndpointConnections"> The private endpoint connections. </param>
        internal OnboardingServiceProperties(ProvisioningState? provisioningState, DeviceEndpoints deviceEndpoints, bool enableCertificateManagement, PublicNetworkAccessOption? publicNetworkAccess, IReadOnlyList<DeviceOnboardingPrivateEndpointConnection> privateEndpointConnections)
        {
            ProvisioningState = provisioningState;
            DeviceEndpoints = deviceEndpoints;
            EnableCertificateManagement = enableCertificateManagement;
            PublicNetworkAccess = publicNetworkAccess;
            PrivateEndpointConnections = privateEndpointConnections;
        }

        /// <summary> The status of the last operation. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The onboarding service device endpoints. </summary>
        internal DeviceEndpoints DeviceEndpoints { get; }
        /// <summary> Hostname of the Endpoint. </summary>
        public string DefaultHostName
        {
            get => DeviceEndpoints?.DefaultHostName;
        }

        /// <summary> Selecting 'true' will enable a Microsoft managed PKI to issue certificates. Setting up of the CA and policies for certificate management will be while defining the onboarding policy. </summary>
        public bool EnableCertificateManagement { get; set; }
        /// <summary> Allow public network access to private links. </summary>
        public PublicNetworkAccessOption? PublicNetworkAccess { get; set; }
        /// <summary> The private endpoint connections. </summary>
        public IReadOnlyList<DeviceOnboardingPrivateEndpointConnection> PrivateEndpointConnections { get; }
    }
}
